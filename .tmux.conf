### LightLine Theme

# status line
set -g status-position top
set -g status "on"
set -g status-justify "centre"
set -g status-style "none,bg=colour0"
set -g status-right-length "100"
set -g status-right-style "none"
set -g status-right "#[fg=colour253,bg=colour0,nobold,nounderscore,noitalics] %a %d %b #[fg=colour253,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour253] %R %p "
set -g status-left-length "100"
set -g status-left-style "none"
set -g status-left "#[fg=colour226,bg=colour0] #S #[fg=colour253,bg=colour0,nobold,nounderscore,noitalics]"

# panes
set -g pane-border-style "fg=colour240"
set -g pane-active-border-style "fg=colour253"
setw -g window-status-activity-style "none"

# messaging
set -g message-command-style "fg=colour231,bg=colour211"
set -g message-style "fg=colour231,bg=colour211"

# window status
setw -g window-status-style "none,fg=colour250,bg=colour0"
setw -g window-status-activity-style "none,fg=colour250,bg=colour0"
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour244,bg=colour0] #I #[fg=colour250,bg=colour0] #W "
setw -g window-status-current-format "#[fg=colour0,bg=colour211,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour211] #I #[fg=colour0,bg=colour211,bold] #W #[fg=colour211,bg=colour0,nobold,nounderscore,noitalics]"

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off

# Set aggressive resize
setw -g aggressive-resize on

# Fix color overrides in tmux
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m,tmux-256color*:Tc:sitm=\E[3m'



### Custom Mapping

set -sg escape-time 0
set -g history-limit 10000

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1


set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on


# use vim like bindings
setw -g mode-keys vi

# # Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "pbcopy"

# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "pbcopy"

# bind-key -t vi-copy WheelUpPane scroll-up
# bind-key -t vi-copy WheelDownPane scroll-down



# remap prefix to...
unbind C-b
set-option -g prefix 'M-\'
bind-key 'M-\' send-prefix


bind-key -n M-j next-window
bind-key -n M-k previous-window


bind-key q kill-pane
bind-key x kill-window


# use vim like splits
bind-key s split-window -h -c "#{pane_current_path}"
bind-key S split-window -v -c "#{pane_current_path}"

# sane tmux+vim navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l


# fzf navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j) || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# # Search tmux panes with fzf
# bind-key 0 run "tmux split-window -p 40 'zsh -ci ftpane'"

