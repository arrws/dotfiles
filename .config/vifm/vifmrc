set vicmd=nvim

" move files that are deleted with dd or :d to the trash directory
" lets you move files by deleting them and then using p to put the file in the new location
set trash

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
" set fastrun

" Natural sort of (version) numbers within text.
set sortnumbers
set history=100
set undolevels=100
set novimhelp
set wildmenu
set wildstyle=popup
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set ignorecase
set smartcase
set nohlsearch
set incsearch

" If you would like to run an executable file when you press return on the file name set this.
set norunexec

colorscheme Default

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt=%m/%d\ %H:%M


" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
set statusline="  %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark b ~/bin/
mark h ~/

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart




" Pdf + stuff
filextype *.pdf,*.djvu,*.ps,*.eps,*.ps.gz
    \ mupdf %f &
fileviewer *.pdf
    \ tput cup %py %px > /dev/tty && sips -s format jpeg %c --out /tmp/tempfile.jpg > /dev/null&& kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py /tmp/tempfile.jpg %N
    \ %pc
    \ kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py --clear %N


" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
    \ mplayer %f,
fileviewer *.mp3
    \ mp3info
fileviewer *.flac
    \ soxi


" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
    \ feh --scale-down --auto-zoom %f

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm
    \ kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py %c %N
    \ %pc
    \ kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py --clear %N


" Video
filetype *.gif,*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,.as[fx]
    \ mplayer %f &

fileviewer *.gif,*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,*.as[fx]
	\ tput cup %py %px > /dev/tty && ffmpeg -y -hide_banner -loglevel panic -i %c -ss 00:00:01.000 -vframes 1 /tmp/tempfile.jpg > /dev/null && kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py /tmp/tempfile.jpg %N
	\ %pc
	\ kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py --clear %N


" Web
filextype *.html,*.htm
    \ firefox %f &
filetype *.html,*.htm links, lynx


" Man page
filetype *.[1-8]
    \ man ./%c
fileviewer *.[1-8]
    \ man ./%c | col -b


" MD5
filetype *.md5
    \ {Check MD5 hash sum}
    \ md5sum -c %f %S,

" SHA1
filetype *.sha1
    \ {Check SHA1 hash sum}
    \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
    \ {Check SHA256 hash sum}
    \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
    \ {Check SHA512 hash sum}
    \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
    \ {Check signature}
    \ !!gpg --verify %c,


" Torrent
filetype *.torrent ktorrent %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
    \ {Mount with fuse-zip}
    \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
    \ {View contents}
    \ zip -sf %c | less,
    \ {Extract here}
    \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
    \ {Mount with archivemount}
    \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz
    \ tar -tzf %c
fileviewer *.tar.bz2,*.tbz
    \ tar -tjf %c
fileviewer *.tar.txz,*.tx
    \ xz --list %c
fileviewer *.ta
    \ tar -tf %c

" Rar2FsMount and rar archives
filetype *.rar
    \ {Mount with rar2fs}
    \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.ra
    \ unrar v %c

" IsoMount
filetype *.iso
    \ {Mount with fuseiso}
    \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
    \ {Mount with sshfs}
    \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
    \ {Mount with curlftpfs}
    \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
    \ {Mount with fuse-7z}
    \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -


" ------------------------------------------------------------------------------

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Sample mappings

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | xclip %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo %c:p | xclip %i<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open console in current directory
nnoremap \t :!xterm &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>
" Open gvim to edit vifmrc
nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>


" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>



" My Stuff
nnoremap \q ZZ<Esc>
nnoremap o <Nop>
nnoremap K <Nop>
nnoremap J jjjj
nnoremap K kkkk
nnoremap zz za

" command! FZFlocate :set noquickview | :execute 'goto "'.system('locate $HOME | fzf --height 10 2>/dev/tty ').'"%IU' | redraw
" nnoremap <c-g> :FZFlocate<cr>
" command! FZFfind :set noquickview | :execute 'goto "'.system('find | fzf --height 10 2>/dev/tty ').'"%IU' | redraw
" nnoremap <c-f> :FZFfind<cr>

" " file types
" set classify='# :dir:/'

